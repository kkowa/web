name: Build and Push

on:
  push:
    branches:
      - main
      - update-ci # TODO: For testing; remove it before merge
    tags:
      - v*
    paths-ignore:
      - ".devcontainer/**"
      - ".vscode/**"
      - "**.md"

  pull_request:
    branches:
      - main
    paths-ignore:
      - ".devcontainer/**"
      - ".vscode/**"
      - "**.md"

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn

      # Action setup-node does not cache node_modules
      - name: Install deps
        run: yarn install --frozen-lockfile

      - name: Check code formatting
        run: |
          yarn run prettier --check .

      - name: Lint code
        run: |
          yarn run eslint .
          yarn run tsc --noEmit

      - name: Run tests
        run: |
          yarn test:ci

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          files: coverage/cobertura-coverage.xml
          flags: unittests
          verbose: true

  build-docker:
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare Docker image metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build app image
        id: build
        uses: docker/build-push-action@v3
        with:
          context: .
          target: production
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true

      - name: Set up container-structure-test
        run: |
          sudo curl -fsSL -o /usr/bin/container-structure-test https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64
          sudo chmod +x /usr/bin/container-structure-test

      - name: Test container structure
        run: |
          container-structure-test test --image "${{ steps.build.outputs.imageid }}" --config container-structure-test.yaml

      - name: Push images
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          docker image push --all-tags "ghcr.io/${{ github.repository }}"
